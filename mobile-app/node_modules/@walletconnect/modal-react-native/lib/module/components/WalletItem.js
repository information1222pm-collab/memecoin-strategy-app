import { memo } from 'react';
import { Text, StyleSheet } from 'react-native';
import useTheme from '../hooks/useTheme';
import { UiUtil } from '../utils/UiUtil';
import Touchable from './Touchable';
import WalletImage from './WalletImage';
import { useSnapshot } from 'valtio';
import { ApiCtrl } from '../controllers/ApiCtrl';
export const WALLET_MARGIN = 8;
export const WALLET_WIDTH = 80;
export const WALLET_HEIGHT = 98;
export const WALLET_FULL_HEIGHT = WALLET_HEIGHT + WALLET_MARGIN * 2;
function _WalletItem(_ref) {
  let {
    id,
    name,
    imageUrl,
    style,
    isRecent,
    onPress
  } = _ref;
  const Theme = useTheme();
  const imageHeaders = ApiCtrl._getApiHeaders();
  const {
    installed
  } = useSnapshot(ApiCtrl.state);
  const isInstalled = !!(installed !== null && installed !== void 0 && installed.find(wallet => wallet.id === id));
  return /*#__PURE__*/React.createElement(Touchable, {
    onPress: onPress,
    key: id,
    style: [styles.container, style]
  }, /*#__PURE__*/React.createElement(WalletImage, {
    size: "md",
    url: imageUrl,
    imageHeaders: imageHeaders
  }), /*#__PURE__*/React.createElement(Text, {
    style: [styles.name, {
      color: Theme.foreground1
    }],
    numberOfLines: 1
  }, UiUtil.getWalletName(name, true)), (isRecent || isInstalled) && /*#__PURE__*/React.createElement(Text, {
    style: [styles.status, {
      color: Theme.foreground3
    }]
  }, isRecent ? 'RECENT' : 'INSTALLED'));
}
const styles = StyleSheet.create({
  container: {
    width: WALLET_WIDTH,
    height: WALLET_HEIGHT,
    alignItems: 'center',
    marginVertical: WALLET_MARGIN
  },
  name: {
    marginTop: 5,
    maxWidth: 100,
    fontSize: 12,
    fontWeight: '600',
    textAlign: 'center',
    marginBottom: 2
  },
  status: {
    fontSize: 10,
    fontWeight: '700',
    textAlign: 'center'
  }
});
export const WalletItem = /*#__PURE__*/memo(_WalletItem, (prevProps, nextProps) => {
  return prevProps.name === nextProps.name;
});
export default WalletItem;
//# sourceMappingURL=WalletItem.js.map